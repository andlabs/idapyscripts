# 7 may 2013
from idc import *

def panic(msg):
	print(msg)
	exit()

def addseg(name, start, end):
	err = idc.AddSeg(start, end, 0, 1, idc.saAbs, idc.scPub)
	if err != 1:
		panic("add segment %s failed" % (name))
	err = idc.RenameSeg(start, name)
	if not(err):
		panic("rename segment %s failed" % (name))

def setLabelAndComment(addr, label, comment):
	err = idc.MakeNameEx(addr, label, idc.SN_PUBLIC)
	if err != 1:
		panic("rename 0x%X to %s failed" % (addr, label))
	idc.MakeRptCmt(addr, comment)

def makeByte(addr, label, comment):
	err = idc.MakeByte(addr)
	if err != 1:
		panic("make 0x%X (%s) byte failed" % (addr, label))
	setLabelAndComment(addr, label, comment)

def makeWord(addr, label, comment):
	err = idc.MakeWord(addr)
	if err != 1:
		panic("make 0x%X (%s) word failed" % (addr, label))
	setLabelAndComment(addr, label, comment)

def makeLong(addr, label, comment):
	err = idc.MakeDword(addr)
	if err != 1:
		panic("make 0x%X (%s) long failed" % (addr, label))
	setLabelAndComment(addr, label, comment)

def main():
	err = idc.rebase_program(0x08000000, idc.MSF_FIXONCE)
	if err != idc.MOVE_SEGM_OK:
		# TODO more descriptive
		panic("could not rebase program: %d" % (err))

	addseg("WRAMo", 0x02000000, 0x02040000)
	addseg("WRAMc", 0x03000000, 0x03008000)
	addseg("IOREG", 0x04000000, 0x04000400)
	addseg("CRAM", 0x05000000, 0x05000400)
	addseg("VRAM", 0x06000000, 0x06018000)
	addseg("OAM", 0x07000000, 0x07000400)
	# ROM
	addseg("SRAM", 0x0E000000, 0x0E010000)

	makeWord(0x4000000, "DISPCNT", "LCD")
	makeWord(0x4000002, "UNDOC_GREENSWAP", "Undocumented - Green")
	makeWord(0x4000004, "DISPSTAT", "General LCD Status")
	makeWord(0x4000006, "VCOUNT", "Vertical Counter")
	makeWord(0x4000008, "BG0CNT", "BG0")
	makeWord(0x400000A, "BG1CNT", "BG1")
	makeWord(0x400000C, "BG2CNT", "BG2")
	makeWord(0x400000E, "BG3CNT", "BG3")
	makeWord(0x4000010, "BG0HOFS", "BG0")
	makeWord(0x4000012, "BG0VOFS", "BG0")
	makeWord(0x4000014, "BG1HOFS", "BG1")
	makeWord(0x4000016, "BG1VOFS", "BG1")
	makeWord(0x4000018, "BG2HOFS", "BG2")
	makeWord(0x400001A, "BG2VOFS", "BG2")
	makeWord(0x400001C, "BG3HOFS", "BG3")
	makeWord(0x400001E, "BG3VOFS", "BG3")
	makeWord(0x4000020, "BG2PA", "BG2 Rotation/Scaling Parameter A")
	makeWord(0x4000022, "BG2PB", "BG2 Rotation/Scaling Parameter B")
	makeWord(0x4000024, "BG2PC", "BG2 Rotation/Scaling Parameter C")
	makeWord(0x4000026, "BG2PD", "BG2 Rotation/Scaling Parameter D")
	makeLong(0x4000028, "BG2X", "BG2 Reference Point")
	makeLong(0x400002C, "BG2Y", "BG2 Reference Point")
	makeWord(0x4000030, "BG3PA", "BG3 Rotation/Scaling Parameter A")
	makeWord(0x4000032, "BG3PB", "BG3 Rotation/Scaling Parameter B")
	makeWord(0x4000034, "BG3PC", "BG3 Rotation/Scaling Parameter C")
	makeWord(0x4000036, "BG3PD", "BG3 Rotation/Scaling Parameter D")
	makeLong(0x4000038, "BG3X", "BG3 Reference Point")
	makeLong(0x400003C, "BG3Y", "BG3 Reference Point")
	makeWord(0x4000040, "WIN0H", "Window 0 Horizontal")
	makeWord(0x4000042, "WIN1H", "Window 1 Horizontal")
	makeWord(0x4000044, "WIN0V", "Window 0 Vertical")
	makeWord(0x4000046, "WIN1V", "Window 1 Vertical")
	makeWord(0x4000048, "WININ", "Inside of Window 0 and")
	makeWord(0x400004A, "WINOUT", "Inside of OBJ Window & Outside of")
	makeWord(0x400004C, "MOSAIC", "Mosaic")
	makeWord(0x4000050, "BLDCNT", "Color Special Effects")
	makeWord(0x4000052, "BLDALPHA", "Alpha Blending")
	makeWord(0x4000054, "BLDY", "Brightness (Fade-In/Out)")
	makeWord(0x4000060, "SOUND1CNT_L", "Channel 1 Sweep register")
	makeWord(0x4000062, "SOUND1CNT_H", "Channel 1 Duty/Length/Envelope (NR11,")
	makeWord(0x4000064, "SOUND1CNT_X", "Channel 1 Frequency/Control (NR13,")
	makeWord(0x4000068, "SOUND2CNT_L", "Channel 2 Duty/Length/Envelope (NR21,")
	makeWord(0x400006C, "SOUND2CNT_H", "Channel 2 Frequency/Control (NR23,")
	makeWord(0x4000070, "SOUND3CNT_L", "Channel 3 Stop/Wave RAM select")
	makeWord(0x4000072, "SOUND3CNT_H", "Channel 3 Length/Volume (NR31,")
	makeWord(0x4000074, "SOUND3CNT_X", "Channel 3 Frequency/Control (NR33,")
	makeWord(0x4000078, "SOUND4CNT_L", "Channel 4 Length/Envelope (NR41,")
	makeWord(0x400007C, "SOUND4CNT_H", "Channel 4 Frequency/Control (NR43,")
	makeWord(0x4000080, "SOUNDCNT_L", "Control Stereo/Volume/Enable (NR50,")
	makeWord(0x4000082, "SOUNDCNT_H", "Control Mixing/DMA")
	makeWord(0x4000084, "SOUNDCNT_X", "Control Sound on/off")
	makeWord(0x4000088, "SOUNDBIAS", "Sound PWM")
#   4000090h 2x10h R/W  WAVE_RAM  Channel 3 Wave Pattern RAM (2 banks!!)
	makeLong(0x40000A0, "FIFO_A", "Channel A FIFO, Data")
	makeLong(0x40000A4, "FIFO_B", "Channel B FIFO, Data")
	makeLong(0x40000B0, "DMA0SAD", "DMA 0 Source")
	makeLong(0x40000B4, "DMA0DAD", "DMA 0 Destination")
	makeWord(0x40000B8, "DMA0CNT_L", "DMA 0 Word")
	makeWord(0x40000BA, "DMA0CNT_H", "DMA 0")
	makeLong(0x40000BC, "DMA1SAD", "DMA 1 Source")
	makeLong(0x40000C0, "DMA1DAD", "DMA 1 Destination")
	makeWord(0x40000C4, "DMA1CNT_L", "DMA 1 Word")
	makeWord(0x40000C6, "DMA1CNT_H", "DMA 1")
	makeLong(0x40000C8, "DMA2SAD", "DMA 2 Source")
	makeLong(0x40000CC, "DMA2DAD", "DMA 2 Destination")
	makeWord(0x40000D0, "DMA2CNT_L", "DMA 2 Word")
	makeWord(0x40000D2, "DMA2CNT_H", "DMA 2")
	makeLong(0x40000D4, "DMA3SAD", "DMA 3 Source")
	makeLong(0x40000D8, "DMA3DAD", "DMA 3 Destination")
	makeWord(0x40000DC, "DMA3CNT_L", "DMA 3 Word")
	makeWord(0x40000DE, "DMA3CNT_H", "DMA 3")
	makeWord(0x4000100, "TM0CNT_L", "Timer 0")
	makeWord(0x4000102, "TM0CNT_H", "Timer 0")
	makeWord(0x4000104, "TM1CNT_L", "Timer 1")
	makeWord(0x4000106, "TM1CNT_H", "Timer 1")
	makeWord(0x4000108, "TM2CNT_L", "Timer 2")
	makeWord(0x400010A, "TM2CNT_H", "Timer 2")
	makeWord(0x400010C, "TM3CNT_L", "Timer 3")
	makeWord(0x400010E, "TM3CNT_H", "Timer 3")
	makeLong(0x4000120, "SIODATA32", "SIO Data (Normal-32bit Mode) (shared with")
	makeWord(0x4000120, "SIOMULTI0", "SIO Data 0 (Parent) (Multi-Player")
	makeWord(0x4000122, "SIOMULTI1", "SIO Data 1 (1st Child) (Multi-Player")
	makeWord(0x4000124, "SIOMULTI2", "SIO Data 2 (2nd Child) (Multi-Player")
	makeWord(0x4000126, "SIOMULTI3", "SIO Data 3 (3rd Child) (Multi-Player")
	makeWord(0x4000128, "SIOCNT", "SIO Control")
	makeWord(0x400012A, "SIOMLT_SEND", "SIO Data (Local of Multi-Player) (shared")
	makeWord(0x400012A, "SIODATA8", "SIO Data (Normal-8bit and UART")
	makeWord(0x4000130, "KEYINPUT", "Key")
	makeWord(0x4000132, "KEYCNT", "Key Interrupt")
	makeWord(0x4000134, "RCNT", "SIO Mode Select/General Purpose")
	makeWord(0x4000140, "JOYCNT", "SIO JOY Bus")
	makeLong(0x4000150, "JOY_RECV", "SIO JOY Bus Receive")
	makeLong(0x4000154, "JOY_TRANS", "SIO JOY Bus Transmit")
	makeWord(0x4000158, "JOYSTAT", "SIO JOY Bus Receive")
	makeWord(0x4000200, "IE", "Interrupt Enable")
	makeWord(0x4000202, "IF", "Interrupt Request Flags / IRQ")
	makeWord(0x4000204, "WAITCNT", "Game Pak Waitstate")
	makeWord(0x4000208, "IME", "Interrupt Master Enable")
	makeByte(0x4000300, "POSTFLG", "Undocumented - Post Boot")
	makeByte(0x4000301, "HALTCNT", "Undocumented - Power Down")

	makeLong(0x03007FFC, "IRQAddr", "")

	idc.Jump(0x08000000)

	print("success")

main()
